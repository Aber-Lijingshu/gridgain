<?xml version="1.0" encoding="UTF-8" ?>

<!--
  GRIDGAIN - CLOUD DEVELOPMENT PLATFORM.
  COPYRIGHT (C) 2005-2010 GRIDGAIN SYSTEMS. ALL RIGHTS RESERVED.

  THIS IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR
  MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC
  LICENSE AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER
  VERSION 3.0 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER
  VERSION.

  THIS LIBRARY IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
  BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
  GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.

  YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC
  LICENSE ALONG WITH THIS LIBRARY; IF NOT, WRITE TO THE FREE
  SOFTWARE FOUNDATION, INC., 51 FRANKLIN ST, FIFTH FLOOR, BOSTON, MA
  02110-1301 USA
-->

<project default="build.gar" name="GridGain GAR for URI deployment SPI testing">
    <description>
        GridGain GAR build script.
    </description>

    <property environment="env"/>

    <!--
        Ensure all necessary external properties are set.
    -->
    <fail unless="env.GRIDGAIN_HOME"
        message="Environment variable GRIDGAIN_HOME must be set to svn root of GridGain project."/>

    <property name="base.dir" value="${env.GRIDGAIN_HOME}"/>
    <property name="extdata.uri.dir" value="${base.dir}/modules/extdata/uri"/>
    <property name="extdata.uri.src.dir" value="${extdata.uri.dir}/java"/>
    <property name="extdata.uri.deploy.dir" value="${extdata.uri.dir}/deploy"/>
    <property name="libs.dir" value="${base.dir}/libs"/>
    <property name="gar.name" value="uri.gar"/>

    <!--
        Libraries.
    -->
    <path id="gg.libs.path">
        <fileset id="gg.libs" dir="${libs.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${base.dir}">
            <include name="gridgain*.jar"/>
        </fileset>
    </path>

    <!--
        Builds GAR file.
    -->
    <target name="build.gar">
        <!-- Trace. -->
        <echo message=""/>
        <echo message="== Building GAR =="/>

        <!-- Cleanup the destination temp binary directory. -->
        <delete dir="${extdata.uri.deploy.dir}/classes" />
        <mkdir dir="${extdata.uri.deploy.dir}/classes"/>

        <!-- Compile the tests classes code. -->
        <javac
            target="1.7"
            source="1.7"
            compiler="javac1.7"
            memoryInitialSize="4096m"
            memoryMaximumSize="4096m"
            srcdir="${extdata.uri.src.dir}"
            destdir="${extdata.uri.deploy.dir}/classes" debug="true"
            nowarn="off">
            <classpath>
                <path refid="gg.libs.path"/>
            </classpath>
            <include name="**/*.java"/>
        </javac>

        <!-- Create the destination temp binary gar directory where files placed according GAR hierarchy. -->
        <delete dir="${extdata.uri.deploy.dir}/tmpgar"/>
        <mkdir dir="${extdata.uri.deploy.dir}/tmpgar"/>
        <mkdir dir="${extdata.uri.deploy.dir}/tmpgar/lib"/>

        <!-- Copy task classes and used resources. -->
        <copy todir="${extdata.uri.deploy.dir}/tmpgar">
            <fileset dir="${extdata.uri.deploy.dir}/classes">
                <include name="**/*.class"/>
            </fileset>
        </copy>

        <copy todir="${extdata.uri.deploy.dir}/tmpgar">
            <fileset dir="${extdata.uri.src.dir}">
                <include name="**/*.xml"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <!-- Just the smallest available -->
        <copy todir="${extdata.uri.deploy.dir}/tmpgar/lib" file="${libs.dir}/aopalliance-1.0.jar"/>


        <!--
            Special task for creating GAR files.
        -->
        <taskdef name="gar" classname="org.gridgain.grid.util.antgar.GridDeploymentGarAntTask"
            classpathref="gg.libs.path"/>

        <!-- Create GAR file. -->
        <gar destfile="${extdata.uri.deploy.dir}/${gar.name}"
            basedir="${extdata.uri.deploy.dir}/tmpgar"/>

        <!-- Cleanup temporary binary directories. -->
        <delete dir="${extdata.uri.deploy.dir}/tmpgar"/>
        <delete dir="${extdata.uri.deploy.dir}/classes"/>
    </target>
</project>
